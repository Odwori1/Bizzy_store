"""add_local_currency_fields_to_sale

Revision ID: 9749a44864c1
Revises: 7b0d7415769d
Create Date: 2025-09-09 23:56:26.141597

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9749a44864c1'
down_revision = '7b0d7415769d'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_barcode_scan_events_barcode'), table_name='barcode_scan_events')
    op.drop_index(op.f('ix_barcode_scan_events_id'), table_name='barcode_scan_events')
    op.drop_table('barcode_scan_events')
    
    # Add currency fields to sales table
    op.add_column('sales', sa.Column('original_amount', sa.Float(), nullable=True))
    op.add_column('sales', sa.Column('original_currency', sa.String(length=3), nullable=True))
    op.add_column('sales', sa.Column('exchange_rate_at_sale', sa.Float(), nullable=True))
    
    # ADD THE MISSING FIELDS TO sale_items TABLE
    op.add_column('sale_items', sa.Column('original_unit_price', sa.Float(), nullable=True))
    op.add_column('sale_items', sa.Column('original_subtotal', sa.Float(), nullable=True))
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove the NEW fields from sale_items first
    op.drop_column('sale_items', 'original_subtotal')
    op.drop_column('sale_items', 'original_unit_price')
    
    # Remove fields from sales table
    op.drop_column('sales', 'exchange_rate_at_sale')
    op.drop_column('sales', 'original_currency')
    op.drop_column('sales', 'original_amount')
    
    # Recreate the dropped table
    op.create_table('barcode_scan_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('barcode', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_barcode_scan_events_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_barcode_scan_events'))
    )
    op.create_index(op.f('ix_barcode_scan_events_id'), 'barcode_scan_events', ['id'], unique=False)
    op.create_index(op.f('ix_barcode_scan_events_barcode'), 'barcode_scan_events', ['barcode'], unique=False)
    # ### end Alembic commands ###
